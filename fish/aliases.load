function x; exit; end
function c; clear; end
function pdr; powder restart; end
function i18n; zeus rake i18n:js:export; end
function rrr
  zeus rake tmp:clear
  zeus rake assets:clean
end

function cp
  /bin/cp -v -i $argv
end

# Tmux {{{1
function tm; tmux -u $argv; end
function tma; tm a $argv; end
function tmt; tm new-session -A  -s test-output $argv; end # create or attach to 'test-output' session

# Todo.txt {{{1
function t; vim "+Todo $argv"; end
function tt; todo.sh -t -d $DOTF/todo/todo.cfg $argv; end
function tl; t ls $argv; end
function te; t edit $argv; end
function ta; t add $argv; end
function tap; t append $argv; end


# Vim {{{1
function v; vim $argv; end
function vl; vim '+OpenSession! last'; end
function va; vim $DOTF/fish/aliases.load; . $DOTF/fish/aliases.load $argv; end
function txt; cd ~/Dropbox/PlainText; and vim $argv; end
function vimt; vim ~/Dropbox/vim.TODO $argv; end
# Find {{{1
function ff; find . -iname $argv; end
function ackc; ack --coffee $argv; end

# Mac Specific {{{1
if [ (uname -s) = "Darwin" ]
  #function ls; /bin/ls -FGsk $argv; end
  function ls; gls --color=always -XFhs $argv; end

# Linux Specific {{{1
else
  function ack; ack-grep $argv; end
  function ls; ls --color=always -XFhs $argv; end
  function cl; xclip -selection clipboard -o $argv; end
  function st; scrot -s $argv; end
  function wp; feh --bg-fill $argv; end

  # mpc {{{2
  function m; ncmpcpp $argv; end
  function mf; mpc search filename $argv; end
  function ma; mpc add $argv; end
  function mp; mpc play $argv; end
  function mcl; mpc clear $argv; end
  # 2}}}
end

# Helpers {{{1

function c1; awk "{ print \$1 }" $argv; end
function c2; awk "{ print \$2 }" $argv; end
function c3; awk "{ print \$3 }" $argv; end
function c4; awk "{ print \$4 }" $argv; end
function c5; awk "{ print \$5 }" $argv; end
function c6; awk "{ print \$6 }" $argv; end

function total; awk "{ s+=\$1 } END { print s }" $argv; end
#function tot; awk "{ s+=\$1 } END { printf(\"% $argv; end'd\n\", s) }"'

# Other {{{1
function ak; ssh-add ~/.keys/bitbucket.ssh.private $argv; end
function bw; convert -colors 2 $argv; end
function cf; /bin/ls -1 | wc -l $argv; end # count files
function dotf; cd $DOTF $argv; end
function k; less $DOTF/docs/keys.md $argv; end
function kk; vim $DOTF/docs/keys.md $argv; end
function n; env NODE_NO_READLINE=1 rlwrap -p Green -S "node >>> " node $argv; end
function pryy; pry -r ./config/environment $argv; end
function psg; ps aux | grep $argv; end
function q; qlmanage -p $argv; end
function trailer; wget -U QuickTime $argv; end
function z; zeus $argv; end
function hh; history $argv; end

# vim: foldmethod=marker
