# vim: foldmethod=marker

set $mod Mod4

default_border pixel 1
font pango:Open Sans 12
hide_edge_borders smart
focus_follows_mouse no

# Setup environment variables 
exec systemctl --user set-environment XDG_CURRENT_DESKTOP=sway
exec systemctl --user import-environment DISPLAY SWAYSOCK WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec dbus-update-activation-environment --systemd DISPLAY SWAYSOCK WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# swaymsg -t get_inputs
# input "9610:12:HAILUCK_CO.,LTD_USB_KEYBOARD" {
#   xkb_options ctrl:nocaps
# }

# Keyboard
input type:keyboard {
  xkb_layout "us,il"
  xkb_options "grp:alt_shift_toggle,ctrl:nocaps"
}

# Rotate GPD screen 90 degrees and scale 150%
# exec swaymsg output DSI-1 transform 90 scale 1.5
output DSI-1 {
  transform 90
  scale 1.5
}

### Startup {{{1

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Execute autostart entries
# exec dex -ae i3

# Setup keyboard
# exec --no-startup-id xkeyboard

# Setup touchpad
# exec --no-startup-id xtouchpad

# Compton compositer (provides vsync)
# exec --no-startup-id compton

# Notifications {{{1
exec_always systemctl --user start swaync && systemctl --user reload swaync.service
bindsym $mod+p exec swaync-client -t

### Screen lock {{{1
set $swaylock_options -e -k -l \
  --font "Noto Sans Bold" --font-size 16 -c 000000 \
  --indicator-radius 100 --indicator-thickness 12
bindsym Control+Mod1+L exec swaylock $swaylock_options
bindsym $mod+Control+l exec swaylock $swaylock_options
 
# exec --no-startup-id dotf-autolock

# exec swayidle \
#   timeout 300 'exec $lock' \
#   timeout 600 'swaymsg "output * power off"' \
#   after-resume 'swaymsg "output * dpms on"' \
#   before-sleep 'exec $lock'

exec_always swayidle -w \
  timeout 300 'swaymsg "output * power off"' \
    resume 'swaymsg "output * power on"' \
  before-sleep 'swaylock -f $swaylock_options' \
  timeout 600 'swaylock -f $swaylock_options'

bindswitch --reload --locked lid:on exec $lock

### Keys: Volume Control {{{1

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +4%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -4%
# bindsym XF86AudioRaiseVolume exec --no-startup-id amixer sset Master 4%+
# bindsym XF86AudioLowerVolume exec --no-startup-id amixer sset Master 4%-
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl prev

### Keys: Misc {{{1

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec dotf-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+d exec "rofi -show run"
bindsym $mod+g exec "rofi -show window"
bindsym $mod+b exec "rofi -show workspace"

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
focus_wrapping no
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation (original mod+h)
bindsym $mod+o split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym $mod+Shift+Return sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

bindsym $mod+Insert           bar mode toggle
# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
bindsym $mod+Shift+r restart
# exit sway (logs you out)
bindsym $mod+Shift+e exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will log you out.' -B 'Yes, exit' 'swaymsg exit'"


### Keys: Apps {{{1

bindsym $mod+Shift+s exec "grim && notify-send -t 2000 'Took Screenshot'"
bindsym Print        exec "grim && notify-send -t 2000 'Took Screenshot'"

### Workspaces {{{1

workspace 1 output primary
workspace 2 output primary
workspace 3 output primary
workspace 4 output primary
# workspace 5 output secondary
# workspace $ws10 output secondary

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Move workspaces between monitors
# bindsym $mod+Shift+comma move workspace to output left
# bindsym $mod+Shift+. move workspace to output right

### Keys: Resize {{{1

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bar {
  status_command waybar
  mode hide
}
