#!/bin/bash

source `dirname $0`/../framework

NEOVIM_VERSION='v0.2.2'

main() {
  header "NeoVim"

  install_neovim
  install_symlinks
  install_plugins
  install_cli_tools

  (cd $DOTF/nvim && ./ctags-build)
}

install_requirements() {
  if is_mac; then
    # python3 is required for the deoplete plugin
    brew_install python3 abduco
  elif is_arch; then
    pacman_install python-pip python2-pip abduco
  elif is_debian; then
    apt_install python-dev python-pip python3-dev python3-pip
  fi

  pip3_install neovim neovim-remote
  pip_install neovim neovim-remote
}

install_neovim() {
  if is_arch; then
    pacman_install neovim
  elif is_debian; then
    install_neovim_appimage
  else
    brew_tap neovim/homebrew-neovim
    brew_install neovim
  fi
}

install_neovim_appimage() {
  mkdir -p ~/Applications
  cd ~/Applications

  local filename="nvim-$NEOVIM_VERSION.AppImage"

  if [ ! -e $filename ]; then
    bullet 'Downloading Neovim AppImage... '
    curl -L https://github.com/neovim/neovim/releases/download/$NEOVIM_VERSION/nvim.appimage \
      -o $filename
    show_result

    chmod +x $filename
  fi

  symlink $filename nvim.AppImage

  mkdir -p ~/bin
  symlink ~/Applications/nvim.AppImage ~/bin/nvim
}

install_symlinks() {
  symlink "$DOTF/nvim" ~/.config/nvim

  symlink "$DOTF/nvim/pylintrc" ~/.pylintrc

  # vim backwards compatibility
  symlink "$DOTF/nvim/init.vim" ~/.vimrc
  symlink "$DOTF/nvim" ~/.vim
}

install_plugins() {
  bullet "Running PlugInstall... "
  nvim +PlugInstall +qall
  success "done"
}

install_cli_tools() {
  if is_arch; then
    pacman_install ctags tidy
  else
    brew_install ctags
    brew_install the_silver_searcher # ag
    brew_install global --with-pygments
  fi

  npm_install htmlhint
  npm_install vimspec
  npm_install marked
  npm_install name-that-color
  npm_install livedown
  npm_install coffeelint
  npm_install eslint
  npm_install prettier
  npm_install jsonlint
  npm_install sass-lint
  pip_install pylint
  pip_install yamllint
  pip3_install neovim-remote
}

main $@
