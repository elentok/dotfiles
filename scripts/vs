#!/usr/bin/env bash
#
# Attaches or creates an abduco session with neovim
#
# Usage:
#
#   vs [session-name]
#
# If "session-name" is not defined:
# - If there are no sessions it will create "neovim-session"
# - If there's only one session it will attach to it
# - If there are multiple sessions it will use FZF to pick a session

export NVIM_KEEP_ALIVE=true

if [ -z "$DISPLAY" ]; then
  export DISPLAY=:0
fi

main() {
  if [ "$1" == "-h" -o "$1" == "--help" ]; then
    usage $0
    exit 1
  fi

  if [ -n "$ABDUCO_SESSION" ]; then
    echo "Error: already inside abduco session"
    exit 2
  fi

  local session="$(get-session-name $1)"
  if [ -z "$session" ]; then
    echo "User aborted"
    exit 3
  fi

  local command='nvim'
  if [ "$session" == 'master' ]; then
    command='nvim-master'
  fi

  ABDUCO_SESSION="$session" abduco -A "$session" bash -c $command
}

get-session-name() {
  if [ -n "$1" ]; then
    echo "$1"
  else
    active_count=$(sessions | wc -l)
    if [ $active_count == 0 ]; then
      echo "neovim-session"
    elif [ $active_count == 1 ]; then
      sessions | leave-only-session-name
    else
      sessions | \
        fzf --prompt='Session> ' --select-1 --exit-0 | \
        leave-only-session-name
    fi
  fi
}

leave-only-session-name() {
  rev | awk '{print $1}' | rev
}

sessions() {
  abduco -l | grep -v '^Active'
}

main "$@"
