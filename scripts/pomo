#!/bin/bash

RED="\033[31m"
GREEN="\033[32m"
BLUE="\033[34m"
RESET="\033[0m"

mkdir -p ~/.pomo
LOG_FILE=~/.pomo/log
PID_FILE=~/.pomo/pid
STATUS_FILE=~/.pomo/status

ITERATION_MINUTES=20

main() {
  func=pomo_$1
  if func_exists $func; then
    shift
    $func $*
  else
    usage
  fi
}

red() {
  echo -e "${RED}$*$RESET"
}

green() {
  echo -e "${GREEN}$*$RESET"
}

pomo_bg() {
  log "session started"
  local min=$ITERATION_MINUTES
  while (( $min > 5 )); do
    echo "$min minutes remaining"
    echo $min > $STATUS_FILE
    min=$(($min - 1))
    sleep 60
  done
  while [[ $min > 0 ]]; do
    yell "$min minutes remaining"
    echo $min > $STATUS_FILE
    min=$(($min - 1))
    sleep 60
  done
  yell "done"
  log "session complete"
  rm $STATUS_FILE
}

log() {
  echo "`now` $*" >> $LOG_FILE
}

yell() {
  terminal-notifier -message "$*"
  echo "$*"
  say "$*"
}

pomo_start() {
  pomo_status --silent && green "Already running" && return
  echo -n "Starting... "
  pomo bg > /dev/null 2>&1 &
  echo $! > $PID_FILE
  green "Started"
}

pomo_status() {
  if [ -e $STATUS_FILE ]; then
    minutes=`cat $STATUS_FILE`
    [ "$1" != "--silent" ] && green "$minutes minutes remaining"
    return 0
  else
    [ "$1" != "--silent" ] && red "Not running"
    return 1
  fi
}

pomo_stop() {
  pomo_status || return
  echo -n "Stopping... "
  kill $(cat $PID_FILE)
  rm $PID_FILE
  log "session interrupted ($(cat $STATUS_FILE) minutes remaining)"
  rm $STATUS_FILE
  sleep 1
  pomo_status
}

pomo_log() {
  tail -f $LOG_FILE
}

pomo_stats() {
  total=$(today_log | grep "session started" | wc -l)
  success=$(today_log | grep "session complete" | wc -l)
  failed=$(today_log | grep "session interrupted" | wc -l)

  echo "Today:"
  echo "$total sessions"
  echo "$success succeeded"
  echo "$failed failed"
}

pomo_interactive() {
  if pomo_status; then
    if confirm "Stop the active session?"; then
      pomo_stop
    fi
  else
    if confirm "Start a new pomodoro session?"; then
      pomo_start
    fi
  fi
}

confirm() {
  read -p "$* (yes/[no]) " yesno
  [[ "$yesno" =~ ^(y|ye|yes)$ ]]
}

today_log() {
  grep "^$(today)" $LOG_FILE
}

func_exists() {
  [ "$(type -t $1)" == "function" ]
}

now() {
  date +%Y-%m-%d\ %H:%M
}

today() {
  date +%Y-%m-%d
}

usage() {
  echo "Usage: $0 <start|stop|status>"
}


main $*
