#!/bin/zsh
#
# Deletes branch from local and remote
#
# Usage:
#
#   git destroy <branch-name>

source $DOTF/framework

SOURCE="$0"

main() {
  if [[ "$1" == "" ]]; then
    usage "$SOURCE"
  else
    destroy_branch "$1"
  fi
}

find_remote() {
  local branch="$1"
  local full_name=$(git branch --remote | sed 's/^ *//' | grep -E "^[^\/]+/${branch}$")
  if [ -z "$full_name" ]; then
    return 1
  else
    echo "$full_name" | cut -d/ -f1
  fi
}

destroy_branch() {
  name="$1"
  remote="$(find_remote $1)"
  if branch_exists "$name"; then
    destroy_local_branch "$name"
  else
    echo "Local branch '$name' doesn't exist"
  fi

  if remote_branch_exists "$name"; then
    destroy_remote_branch "$name" "$remote"
  else
    echo "Remote branch '$name' doesn't exist"
  fi
}

branch_exists() {
  git branch | sed 's/^[\* ]*//' | grep "^${1}$" > /dev/null
}

remote_branches() {
  git all-branches --remotes
}

remote_branch_exists() {
  remote_branches | grep "^${1}$" > /dev/null
}

destroy_local_branch() {
  if confirm "Destroy local branch '$1'"; then
    bullet "Destroying..."
    git branch -d "$1"
    if [[ $? -ne 0 ]]; then
      error "An error occured"
      exit 1
    fi
  fi
}

destroy_remote_branch() {
  local branch="$1"
  local remote="$2"
  if confirm "Destroy remote branch '$branch'"; then
    bullet "Destroying..."
    git push --delete "$remote" "$branch"
    if [[ $? -ne 0 ]]; then
      error "An error occured"
      exit 1
    fi
  fi
}

main "$@"
