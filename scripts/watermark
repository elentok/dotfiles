#!/usr/bin/env ruby
# Watermarker
#
# Usage:
#
#   watermark <text> <color> <image>...

require 'fileutils'

HEIGHT_PERCENTAGE = 1.6
PADDING_PERCENTAGE = 0.5
STROKE_PERCENTAGE = 0.05
FONT = File.expand_path("../../plugins/fonts/MagraBold.ttf", __FILE__)

def main
  if ARGV.length < 3
    system "usage '#{__FILE__}'"
  end

  text = ARGV.shift
  color = ARGV.shift

  ARGV.each do |filename|
    add_watermark(text, color, filename)
  end
end

def add_watermark(text, color, filename)
  puts
  puts '------------------------------------------'
  puts "Adding watermark '#{text}' (#{color}) to '#{filename}'..."

  dir = File.join(File.dirname(filename), 'watermarked')
  FileUtils.mkdir_p dir

  output = File.join(dir, File.basename(filename))

  img = Image.new(filename)

  font_size = img.height * HEIGHT_PERCENTAGE / 100
  padding = img.height * PADDING_PERCENTAGE / 100
  stroke_width = img.height * STROKE_PERCENTAGE / 50

  puts "* orientation: '#{img.portrait? ? 'portrait' : 'landscape'}'"
  puts "* font size: '#{font_size}'"

  cmd = <<-EOF
    convert "#{filename}" -pointsize "#{font_size}" \
      -auto-orient \
      -stroke black \
      -strokewidth #{stroke_width} \
      -weight bold \
      -font "#{FONT}" \
      -draw "gravity southeast \
            fill #{color} text #{padding},#{padding} '#{text}'" \
      "#{output}"
  EOF

  puts "Running:"
  puts cmd
  system(cmd)
end

class Image
  attr_reader :width, :height

  def initialize(filename)
    @filename = filename

    identify = `identify -format "#{fields}" "#{@filename}"`.split(' ')
    orientation = identify[0]
    if orientation == '1' || orientation == '3'
      @width = identify[1].to_i
      @height = identify[2].to_i
    else
      @width = identify[2].to_i
      @height = identify[1].to_i
    end
  end

  def fields
    %w(exif:orientation width height).map { |f| "%[#{f}]" }.join(' ')
  end

  def portrait?
    @height > @width
  end
end

main
