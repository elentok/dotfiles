#!/usr/bin/env ruby

def main
  local_branches = `git branch | cut -c 3-`.split("\n")
  remote_branches =
    `git branch --remote | cut -c 3- | grep -v '/HEAD'`.split("\n")

  remote_only_branches = remote_branches.select do |branch|
    _remote, branch = branch.split('/', 2)
    !local_branches.include?(branch)
  end

  branches = [].concat(local_branches).concat(remote_only_branches).join("\n")

  branch = `echo "#{branches}" | fzf --preview 'git log {1} | head -50'`.strip

  return unless branch.length > 0

  if remote_only_branches.include? branch
    puts "The branch '#{branch}' is not checked out locally, " \
      'creating a local branch...'

    _remote, branch_name = branch.split('/', 2)
    system "git checkout -b #{branch_name} #{branch}"
  else
    system "git checkout #{branch}"
  end
end

main
