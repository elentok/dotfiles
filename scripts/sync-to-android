#!/usr/bin/env bash

set -e

source $DOTF/framework

BACKUPS_TO_KEEP=5
ANDROID_LOG=/sdcard/.sync-to-android.log

main() {
  if [ $# -lt 3 ]; then
    usage
  else
    sync $*
  fi
}

usage() {
  echo
  echo "Usage:"
  echo
  echo "  sync-to-android <source> <target> <backup-dir>"
  echo
}

sync() {
  source="$1"
  target="$2"
  backup="$3"

  echo
  echo -e "Syncing from local $BLUE$source$RESET"
  echo -e "         to device $BLUE$target$RESET"
  echo -e "(Using $BLUE$backup$RESET for backups)"
  echo

  create_backup_dir
  backup
  remove_old_backups
  push_to_android
}

create_backup_dir() {
  bullet "Creating $BLUE$backup$RESET directory... "
  if android_is_dir $backup; then
    info "already exists."
  else
    adb shell mkdir -p $backup
    success "done."
  fi
}

backup() {
  bullet "Backing up $BLUE$target$RESET\n"
  date=$(date +%Y-%m-%d_%H%M)
  suffix=""

  if android_file_exists $target; then
    backup_target=$backup/$date
    while android_file_exists $backup_target; do
      suffix=$((suffix + 1))
      backup_target="$backup/$date-$suffix"
    done

    echo -ne "  to $BLUE$backup_target$RESET..."

    adb_shell mv $target $backup_target
    if [ $? -eq 0 ]; then
      success "done."
    else
      show_adb_error
      exit 1
    fi
  else
    info "doesn't exist, not necessary."
  fi
}

remove_old_backups() {
  bullet "Deleting old backups...\n"
  backups_to_delete | while read name; do
    bullet "Deleting $BLUE${name}$RESET... "

    if adb_shell rm -rf $backup/$name; then
      success "done"
    else
      show_adb_error
      exit 1
    fi

  done
}

backups_to_delete() {
  adb shell ls $backup/ | sort -r | tail -n+$((BACKUPS_TO_KEEP+1)) | tr -d '\r'
  if [ $? -ne 0 ]; then
    error "Error getting backups to delete"
    exit 1
  fi
}

push_to_android() {
  bullet "Copying files to $BLUE$target$RESET... "
  info ""

  adb push $source $target > /tmp/push-to-android 2>&1
  tail -2 /tmp/push-to-android
  echo "(see /tmp/push-to-android for more details)"
}

android_is_dir() {
  adb_shell test -d $1
}

android_file_exists() {
  adb_shell test -e $1
}

adb_shell() {
  cmd="$* > $ANDROID_LOG 2>&1; echo -n \$?"
  if [ "$DEBUG" != "" ]; then
    echo -e "\n$YELLOW======================="
    echo "DEBUG: $cmd"
    echo -e "=======================$RESET"
  fi
  exitcode=$(adb shell $cmd)
  [ "$exitcode" == "0" ]
}

show_adb_error() {
  echo
  error "======================"
  error "Exit code: $exitcode"
  error "Error output:"
  adb shell cat $ANDROID_LOG
  error "======================"
}

main $*
