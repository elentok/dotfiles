#!/usr/bin/env ruby

require "#{ENV['DOTF']}/framework.rb"

class CLI < OptionsCLI
  desc 'Runs migration commands on files'
  usage 'migrate <migration-file> <files-to-migrate>'
  min_items 2

  def start
    commands = Commands::Reader.read(ARGV.shift)

    puts yellow('Commands:')
    commands.each { |c| puts "* #{c}" }

    puts
    puts yellow('Migrating:')
    runner = Commands::Runner.new(commands)
    ARGV.each do |filename|
      print "* #{filename}... "
      if runner.run!(filename)
        puts green('made changes.')
      else
        puts gray('no changes.')
      end
    end
  end
end

module Commands
  class Reader
    attr_reader :commands

    def initialize
      @commands = []
    end

    def self.read(filename)
      filename = File.expand_path(filename)
      reader = new
      reader.instance_eval File.read(filename), filename
      reader.commands
    end

    def replace(*items, &block)
      @commands.push Replace.new(*items, &block)
    end
  end

  class Runner
    def initialize(commands)
      @commands = commands
    end

    def run!(filename)
      original_text = File.open(filename, 'r').read
      text = original_text
      @commands.each { |c| text = c.run(text) }

      return false if text == original_text

      File.open(filename, 'w') { |f| f.puts text }
      true
    end
  end

  class Replace
    def initialize(*items, &block)
      @items = items
      @block = block
    end

    def run(text)
      text.gsub(*@items, &@block)
    end

    def to_s
      if @block
        "Replace '#{@items[0]}' to [Block]"
      else
        "Replace '#{@items[0]}' to '#{@items[1]}'"
      end
    end
  end
end

CLI.new.start
