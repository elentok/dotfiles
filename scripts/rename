#!/bin/zsh

export RED="\033[31m"
export GREEN="\033[32m"
export YELLOW="\033[33m"
export BLUE="\033[34m"
export RESET="\033[0m"

SED='sed'
if [ "$(which gsed)" != "" ]; then
  # use gnu-sed if available
  SED='gsed'
fi

usage() {
  echo "Usage:"
  echo
  echo "  rename {regexp} files"
  echo
  echo "  example:"
  echo "    rename 's/one/two/' *.png"
}

simulate() {
  regexp=$1
  shift
  has_results='no'
  for file in $*; do
    new_file=$(echo $file | sed "$regexp")
    if [ "$file" != "$new_file" ]; then
      echo "Will rename ${YELLOW}${file}$RESET"
      echo "         to ${BLUE}${new_file}$RESET"
      has_results='yes'
    fi
  done
  [ "$has_results" = 'yes' ]
  return $?
}

confirm() {
  read "yesno?Rename (yes/[no])? "
  [ "$yesno" = "yes" ]
  return $?
}

rename() {
  regexp=$1
  shift
  for file in $*; do
    new_file=$(echo $file | sed "$regexp")
    if [ "$file" != "$new_file" ]; then
      rename_file "$file" "$new_file"
    fi
  done
}

rename_file() {
  echo "Renaming ${YELLOW}${file}$RESET"
  echo "      to ${GREEN}${new_file}$RESET"

  git ls-files --error-unmatch $file > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    git mv "$file" "$new_file"
  else
    mv "$file" "$new_file"
  fi
}

case "$1" in
  "")
    usage
    ;;
  *)
    if simulate $*; then
      if confirm; then rename $*; fi
    fi
    ;;
esac




