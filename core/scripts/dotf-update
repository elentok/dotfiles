#!/usr/bin/env bash

set -euo pipefail

source "$DOTF/framework"

MORNING=false

function main() {
  if [ "${1:-}" == "--morning" ]; then
    MORNING=true
  else
    dotf-summary start
  fi

  dotf-header h1 "Updating environment..."
  cd "$DOTF"

  dotf-summary run 'Pull ~/.dotfiles' pull-dotfiles

  "$DOTF/bootstrap.sh"

  dotf-summary run 'Update node' update-node
  dotf-summary run 'Update github packages' dotf-github update
  dotf-summary run 'Update packages' dotf-pkgs upgrade
  dotf-summary run 'Update Neovim stuff' update-neovim-stuff

  if [ "$MORNING" == 'false' ]; then
    dotf-summary stop
  fi
}

function pull-dotfiles() {
  dotf-header h2 "Pulling changes... "
  old_head=$(git rev-parse HEAD)
  git pull
  new_head=$(git rev-parse HEAD)

  if [ "$old_head" == "$new_head" ]; then
    echo -e "\\nUp to date."
  else
    echo -e "\\nPulled the following changes:"
    git log --pretty=%s "${old_head}..${new_head}" | sed 's/^/- /'
  fi
}

function update-node() {
  if is-n-providing-node; then
    dotf-header h2 'Updating N...'
    (cd "$N_PREFIX" && git pull)

    dotf-header h2 'Updating NodeJS...'
    n --preserve "$(dotf-node-version)" # Preserve npm (don't downgrade to lts version)
  fi
}

function update-neovim-stuff() {
  dotf-header h2 'Neovim: Upgrade'
  if dotf-is-mac; then
    brew upgrade neovim
  else
    dotf-github u nvim
  fi
  dotf-nvim-lazy-sync
}

main "$@"
