#!/usr/bin/env bash

source "$DOTF/framework"

LOCAL=no
NPM=npm
NPM_ARGS=''

if [ "$DOTF_CONFIG_NODE_PROVIDER" == "fnm" ]; then
  eval "$(fnm env --use-on-cd)"
fi

while [[ "${1:-}" =~ ^- ]]; do
  if [ "$1" == "--local" ]; then
    LOCAL=yes
  else
    NPM_ARGS="$NPM_ARGS $1"
  fi
  shift
done

function main() {
  dotf-bullet "Installing npm packages: $*..."
  die-if-npm-missing
  find-node-modules
  set-npm-command

  missing=$(find-missing-packages "$@")
  if [ -z "$missing" ]; then
    dotf-info " already installed."
  else
    echo
    dotf-bullet "Installing $missing..."
    $NPM install $NPM_ARGS $missing
  fi
}

function find-node-modules() {
  if [ "$LOCAL" == 'yes' ]; then
    NODE_MODULES="$(pwd)/node_modules"
  else
    if is-global-node; then
      NODE_MODULES="/usr/local/lib/node_modules"
    else
      NODE_MODULES="$(cd "$(node-bin-dir)/../lib/node_modules" && pwd)"
    fi
  fi
}

function node-bin-dir() {
  dirname "$(which node)"
}

function is-global-node() {
  [ "$(node-bin-dir)" = "/usr/bin" ]
}

function set-npm-command() {
  if [ "$LOCAL" == 'no' ]; then
    NPM_ARGS="$NPM_ARGS -g"
    if ! is-user-nodejs; then
      NPM='sudo npm'
    fi
  fi
}

function die-if-npm-missing() {
  if ! dotf-has-command npm; then
    dotf-error "npm is not installed, skipping"
    exit 1
  fi
}

function find-missing-packages() {
  for pkg in $*; do
    if [ ! -d "$NODE_MODULES/$pkg" ]; then
      printf "$pkg "
    fi
  done
}

is-user-nodejs() {
  [ "$(file-owner $(which node))" = "$(whoami)" ]
}

main "$@"
