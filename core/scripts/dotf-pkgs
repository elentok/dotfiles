#!/usr/bin/env bash
#
# Install and upgrades packages via npm, pip, apt, ...
#
# Usage:
#
#   dotf-pkgs i <source>
#   dotf-pkgs u <source>
#
# Sources: apt, brew, pip, npm, cargo

set -euo pipefail

source "$(dirname "$0")/../../framework"

CONFIG_FILE="$DOTF/config/packages.cfg"

function main() {
  cmd="${1:-}"
  shift || true

  case "$cmd" in
    i | install)
      install-pkgs "$@"
      ;;
    u | upgrade)
      upgrade-pkgs "$@"
      ;;
    *)
      usage "$0"
      exit 1
      ;;
  esac
}

function install-pkgs() {
  case "${1:-}" in
    apt)
      install-apt-pkgs
      ;;
    brew)
      install-brew-pkgs
      ;;
    pip)
      install-pip-pkgs
      ;;
    npm)
      install-npm-pkgs
      ;;
    cargo)
      install-cargo-pkgs
      ;;
    *)
      install-apt-pkgs && install-pip-pkgs && install-npm-pkgs
      ;;
  esac
}

function install-apt-pkgs() {
  if dotf-is-linux; then
    dotf-header h2 '[dotf-pkgs] Installing apt packages...'
    dotf-apt "$(get-pkgs apt)"

    #if has_command X; then
    #  dotf-header h2 '[dotf-pkgs] Installing apt-gui packages...'
    #  dotf-apt "$(get-pkgs apt-gui)"
    #fi

    if [ "${KDE:-}" = 'yes' ]; then
      dotf-header h2 '[dotf-pkgs] Installing apt-kde packages...'
      dotf-apt "$(get-pkgs apt-kde)"
    fi
  elif is_termux; then
    dotf-header h2 '[dotf-pkgs] Installing termux packages...'
    dotf-apt "$(get-pkgs termux)"
  fi
}

function install-brew-pkgs() {
  dotf-header h2 '[dotf-pkgs] Installing brew packages...'
  dotf-brew "$(get-pkgs brew)"
}

function install-pip-pkgs() {
  dotf-header h2 '[dotf-pkgs] Installing pip packages...'
  dotf-pip "$(get-pkgs pip)"
}

function install-npm-pkgs() {
  dotf-header h2 '[dotf-pkgs] Installing npm packages...'
  dotf-npm "$(get-pkgs npm)"
}

function install-cargo-pkgs() {
  dotf-header h2 '[dotf-pkgs] Installing cargo packages...'
  dotf-cargo "$(get-pkgs cargo)"
}

function upgrade-pkgs() {
  dotf-header h2 '[dotf-pkgs] Updating packages...'

  dotf-header h3 '[dotf-pkgs] Updating pip packages...'
  # shellcheck disable=SC2046
  pip3 install --upgrade --user $(get-pkgs pip)

  dotf-header h3 '[dotf-pkgs] Updating npm packages...'
  if is-n-providing-node; then
    npm="npm"
  elif is-nvm-providing-node; then
    npm="npm"
  else
    npm="sudo npm"
  fi
  # shellcheck disable=SC2046
  $npm install -g $(get-pkgs npm)
}

function get-pkgs() {
  local prefix="$1"
  grep "^${prefix}: " "$CONFIG_FILE" | awk '{print $2}' | xargs
}

main "$@"
