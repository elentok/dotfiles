#!/usr/bin/env bash

source "$DOTF/framework"

function main() {
  set_zsh_as_default_shell
  install_symlinks
  install_fzf
  reset_completion_cache

  # fix premissions issue
  chmod -R g-w "$DOTF/core/zsh/vendor/zsh-completions"
}

function set_zsh_as_default_shell() {
  if dotf-is-mac; then
    my_shell=$(echo "$SHELL" | rev | cut -d/ -f1 | rev)
    if [ "$my_shell" != "zsh" ]; then
      zsh_bin="$(which zsh)"
      dotf-bullet "Changing shell to ${zsh_bin}... "
      chsh -s "$zsh_bin"
    fi
  else
    zsh_bin="$(which zsh)"
    dotf-bullet "Changing user's shell to $zsh_bin... "
    if [[ "$SHELL" =~ /zsh ]]; then
      dotf-info 'already set'
    else
      chsh -s "$zsh_bin"
    fi
  fi
}

function install_symlinks() {
  dotf-symlink "$DOTF/core/zsh" ~/.zsh
  dotf-symlink "$DOTF/core/zsh/zshrc" ~/.zshrc
  dotf-symlink "$DOTF/core/zsh/zshenv" ~/.zshenv
  dotf-symlink "$DOTF/core/zsh/zprofile" ~/.zprofile
  dotf-symlink "$DOTF/core/zsh/p10k.zsh" ~/.p10k.zsh
}

function install_fzf() {
  dotf-bullet 'Installing FZF... '
  if [ -e ~/.fzf ]; then
    dotf-info 'already installed.'
  else
    git_clone https://github.com/junegunn/fzf.git ~/.fzf --depth 1
    ~/.fzf/install --completion --key-bindings --no-update-rc
  fi
}

reset_completion_cache() {
  dotf-bullet 'Resetting completion cache...'
  rm -rf ~/.zcompcache
  rm -rf ~/.local/share/zcompcache
  rm -f ~/.zcompdump
  zsh -c 'autoload -U compinit && compinit'
}

main "$@"
