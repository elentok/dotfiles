# vim: foldmethod=marker

# Settings {{{1
# Since Tmux 2.1 we should use the "tmux" TERM
# https://alexpearce.me/2014/05/italics-in-iterm2-vim-tmux/#tmux-21-and-above
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Add underscore support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set -g history-limit 10000

set -g set-clipboard on
tmux_conf_copy_to_os_clipboard=true

# re-number windows when one is closed
set -g renumber-windows on

# start window numbering at 1
set -g base-index 1

# Disable the delay after pressing Escape
# http://superuser.com/questions/252214/slight-delay-when-switching-modes-in-vim-using-tmux-or-screen
set -sg escape-time 0

# doesn't allow shell program to change the window title
#set -g allow-rename off
#set -g set-titles off
#set -g automatic-rename off


# Turn the mouse on, but without copy mode dragging
set -g mouse on

# Toggle mouse mode
# (taken from https://github.com/tangledhelix/dotfiles/blob/master/tmux.conf)
# if-shell '[[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.1" | bc) -eq 1 ]]' \
    # 'set -g mouse on; bind m set -g mouse on \; display "Mouse ON"; bind M set -g mouse off \; display "Mouse OFF"' \
    # 'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on; bind m set -g mode-mouse on \; set -g mouse-resize-pane on \; set -g mouse-select-pane on \; set -g mouse-select-window on \; display "Mouse ON"; bind M set -g mode-mouse off \; set -g mouse-resize-pane off \; set -g mouse-select-pane off \; set -g mouse-select-window off \; display "Mouse OFF"'

# set -g mouse on

# set-option -g default-command "fish"
set -g monitor-activity on
set -g visual-activity off

# required for the "roxma/vim-tmux-clipboard" vim plugin
set -g focus-events on

# Settings: Theme {{{1
set -g status-bg '#2c265d'
set -g status-fg white
#set -g status-attr default
set -g status-left '<#S> '
set -g status-right '#[fg=yellow]#($HOME/.dotfiles/scripts/bat-left)#[default] %a %Y-%m-%d %H:%M'

#set-window-option -g window-active-style 'bg=#171b20'
set-window-option -g window-active-style 'bg=#2e3440'
set-window-option -g window-style 'bg=#171b20'

set-window-option -g window-status-format ' #I #W '
set-window-option -g window-status-style 'fg=white,bg=#2c265d'
set-window-option -g window-status-current-format '[#I #W]'
set-window-option -g window-status-current-style 'fg=white,bg=#4a3f9c'
set-window-option -g window-status-last-style 'fg=white,bg=#2c265d'

set -g pane-active-border-style 'fg=green bg=#2e3440'
set -g pane-border-style 'fg=magenta bg=#171b20'

set -g window-status-separator ''

# OSX Specific {{{1
if-shell "uname | grep -q Darwin" "source-file $HOME/.dotfiles/core/tmux/tmux-osx.conf"

# Use Ctrl-a (like screen) {{{1
unbind C-b
set -g prefix C-a
bind-key C-a last-window


# Vi: split windows {{{1
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# Vi: move around panels with M-hjkl {{{1
# make sure that Left option key in iTerm2 settings is set to "+Esc"
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Vi: copy mode {{{1
# Enter copy mode via <c-a>[
setw -g mode-keys vi
bind-key -T copy-mode-vi v   send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y   send-keys -X copy-pipe-and-cancel "dotf-yank-osc52 | dotf-clipboard copy"
bind     -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "dotf-yank-osc52 | dotf-clipboard copy"
#bind-key C-y send-keys y\; run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"\; display-message "copied"

# C-k/j: page up/down {{{1
bind-key -T copy-mode-vi C-k send-keys -X page-up
bind-key -T copy-mode-vi C-j send-keys -X page-down
bind-key -T copy-mode-vi [ send-keys -X page-up
bind-key -T copy-mode-vi ] send-keys -X page-down
bind C-k copy-mode -u

bind h previous-window
bind j swap-pane -D
bind k swap-pane -U
bind l next-window

# Resize panes {{{1
bind < resize-pane -L 7
bind > resize-pane -R 7
bind - resize-pane -D 7
bind + resize-pane -U 7
bind = resize-pane -U 7

bind-key -n M-H resize-pane -L 7
bind-key -n M-J resize-pane -D 7
bind-key -n M-K resize-pane -U 7
bind-key -n M-L resize-pane -R 7

# Misc keybindings {{{1
bind r source-file ~/.tmux.conf
bind-key a send-prefix
bind S choose-session
bind '\' run "dmux toggle_height 2 60%"
bind 'c-\' run "dmux toggle_height 2 60%"
bind c-[ copy-mode
bind c-] paste-buffer
bind c-m run "mpc toggle > /dev/null"

# The first pair doesn't work on Mac, so trying another way
bind-key -n M-, previous-window
bind-key -n M-. next-window

bind-key -n M-[ previous-window
bind-key -n M-] next-window

bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'
bind-key o run 'tmux-links open'
bind-key O run 'tmux-links copy'

bind y run 'tmux-yank visible'
bind Y run 'tmux-yank all'

bind g split-window "tmux-goto-session"
bind C command-prompt -p "Create session:" "new-session -s '%%'"

# Join/Send pane
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
#bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Persist last directory when opening a new shell {{{1
bind-key c new-window -c "#{pane_current_path}"
bind-key s split-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits. {{{1
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# disable this for now since it breaks pasting inside tmux:
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Plugins {{{1
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'Morantron/tmux-fingers'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-copycat'

# run -b '~/.tmux/plugins/tpm/tpm'
